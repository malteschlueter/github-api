name: Tests

on:
    push:
    pull_request:

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v2

            -   name: Validate composer.json and composer.lock
                run: composer validate

            -   name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v2
                with:
                    path: vendor
                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-

            -   name: Install php dependencies
                if: steps.composer-cache.outputs.cache-hit != 'true'
                run: composer install --prefer-dist --no-progress --no-suggest

            -   name: Archive application
                run: >
                    cd ..
                    && tar -czf github-api.tar.gz --exclude=".git" github-api
                    && mv github-api.tar.gz github-api/github-api.tar.gz

            -   name: Upload prepared application
                uses: actions/upload-artifact@v2
                with:
                    name: applicationArchive
                    path: github-api.tar.gz

    deptrac:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Download prepared application
                uses: actions/download-artifact@v2
                with:
                    name: applicationArchive

            -   name: Unpack application
                run: tar -xzf github-api.tar.gz --strip=1

            -   name: Run deptrac
                run: php vendor/bin/deptrac analyze --fail-on-uncovered --formatter-github-actions=true

    lint:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Download prepared application
                uses: actions/download-artifact@v2
                with:
                    name: applicationArchive

            -   name: Unpack application
                run: tar -xzf github-api.tar.gz --strip=1

            -   name: Validate container
                run: php bin/console lint:container

            -   name: Validate yaml files
                run: php bin/console lint:yaml config

    php-cs-fixer:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Download prepared application
                uses: actions/download-artifact@v2
                with:
                    name: applicationArchive

            -   name: Unpack application
                run: tar -xzf github-api.tar.gz --strip=1

            -   name: Run php-cs-fixer
                run: php vendor/bin/php-cs-fixer fix --diff --dry-run

    phpstan:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Download prepared application
                uses: actions/download-artifact@v2
                with:
                    name: applicationArchive

            -   name: Unpack application
                run: tar -xzf github-api.tar.gz --strip=1

            -   name: Run phpstan
                run: php vendor/bin/phpstan analyze --error-format=github

    psalm:
        runs-on: ubuntu-latest
        needs: build
        steps:
            -   name: Download prepared application
                uses: actions/download-artifact@v2
                with:
                    name: applicationArchive

            -   name: Unpack application
                run: tar -xzf github-api.tar.gz --strip=1

            -   name: Clear cache
                run: php bin/console cache:clear

            -   name: Run psalm
                run: php vendor/bin/psalm.phar --output-format=github
